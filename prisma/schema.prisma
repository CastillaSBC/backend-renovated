// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./db.sqlite3"
}

model DailyStreak {
  id            Int    @id @default(autoincrement())
  latestDate    Int    @default(0)
  streak        Int    @default(0)
  failedTimes   Int
  longestStreak Int    @default(0)
  userId        String @unique
  user          User   @relation(fields: [userId], references: [id])
}

model User {
  id               String            @id @unique @default(cuid())
  username         String            @unique
  email            String?
  image            String?           @default("")
  verifiedEmail    Boolean?          @default(false)
  password         String
  currentPage      String?
  online           Int?              @default(0)
  moderated        Boolean           @default(false)
  moderationReason String            @default("User was moderated without a reason.")
  moderationEnd    Int               @default(0)
  posts            Threads[]
  Responses        Responses[]
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @default(now())
  role             String            @default("user")
  ThreadReactions  ThreadReactions[]
  DailyStreak      DailyStreak?
}

model Threads {
  id               String            @id @default(cuid())
  title            String
  content          String
  author           User              @relation(fields: [authorId], references: [id])
  pinned           Boolean           @default(false)
  moderated        Boolean           @default(false)
  moderationReason String            @default("This post has been moderated without a reason.")
  authorId         String
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @default(now())
  responses        Responses[]
  reactions        ThreadReactions[]
  Category         Category?         @relation(fields: [categoryId], references: [id])
  categoryId       String?
}

model Category {
  id          String    @id @default(cuid())
  name        String    @default("Uncategorized")
  description String    @default("N/A")
  threads     Threads[]
}

model ThreadReactions {
  id        String   @id @default(cuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  reaction  String // 1 = Fire // 2 = laugh // 3 = thumbsup // 4 = heart // 5 = eyes
  Threads   Threads? @relation(fields: [threadsId], references: [id])
  threadsId String?
}

model Responses {
  id               String   @id @default(cuid())
  content          String
  author           User     @relation(fields: [authorId], references: [id])
  thread           Threads  @relation(fields: [threadId], references: [id])
  moderated        Boolean  @default(false)
  moderationReason String   @default("This post has been moderated without a reason.")
  threadId         String
  authorId         String
  createdAt        DateTime @default(now())
  updatedAt        DateTime @default(now())
}
